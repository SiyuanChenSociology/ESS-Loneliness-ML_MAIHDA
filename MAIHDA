# After the ML, Intersectional MAIHDA (Loneliness) 
# Replicate code ~ Github
# date: 8th OCT., 2025
# code check: 15th OCT., 2025

library(dplyr)
library(directlabels)
library(haven)
library(tidyverse)
library(ggeffects)
library(lme4)
library(merTools)
library(labelled)
library(sjPlot)
library(Metrics)
library(mosaic)
library(gt)
library(glmmTMB)
library(ggplot2)
library(ggh4x)
library(janitor)


# ------------------------------------------------------------------------------
# Data preparation
data <- read_dta("selected_data.dta")

# Country
data <- data %>%
  mutate(
    Country = recode(
      Country,
      `1` = "Austria",
      `2` = "Belgium",
      `3` = "Bulgaria",
      `4` = "Switzerland",
      `5` = "Cyprus",
      `6` = "Germany",
      `7` = "Denmark",
      `8` = "Estonia",
      `9` = "Spain",
      `10` = "Finland",
      `11` = "France",
      `12` = "United Kingdom",
      `13` = "Hungary",
      `14` = "Ireland",
      `15` = "Latvia",
      `16` = "Netherlands",
      `17` = "Norway",
      `18` = "Poland",
      `19` = "Portugal",
      `20` = "Romania",
      `21` = "Russian Federation",
      `22` = "Sweden",
      `23` = "Slovakia",
      `24` = "Slovenia",
      `25` = "Ukraine",
      `26` = "Czech Republic",
      `27` = "Iceland",
      `28` = "Kosovo",
      `29` = "Greece",
      `30` = "Croatia",
     # `31` = "Israel", has excluded before XGBoost
      `32` = "Italy",
      `33` = "Lithuania",
      `34` = "Luxembourg",
      `35` = "Turkey",
      `36` = "Albania",
      `37` = "Serbia",
      `38` = "Montenegro",
      `39` = "North Macedonia"
    )
  )
table(data$Country)

# Outcome
summary(data$loneliness) 
class(data$loneliness)

missing_summary <- data %>%
  summarise(
    loneliness_na = sum(is.na(loneliness)),
    subjhinc_na = sum(is.na(SubjHHincome)),
    fnsdfml_na = sum(is.na(CHFinancSit)),
    gender_na = sum(is.na(Gender)),
    generation_na = sum(is.na(MigBackground)),
    age_groups_na = sum(is.na(AgeGroups))
  )
missing_summary


# Strata-defining variables
vars_is_factor <- c(
  "Gender", "AgeGroups", "SubjHHincome", "CHFinancSit", "MigBackground"
  )
sapply(data[vars_is_factor], class)
data[vars_is_factor] <- lapply(data[vars_is_factor], as.factor)
sapply(data[vars_is_factor], summary)


all_sample_strata <- data %>%
  drop_na(all_of(vars_is_factor)) 

sapply(all_sample_strata[vars_is_factor], summary)



all_sample_strata <- all_sample_strata %>%
  mutate(
    
    CHFinancSit = recode(CHFinancSit,
                     `1` = "Often",
                     `2` = "Often",
                     `3` = "Sometimes",
                     `4` = "Hardly ever",
                     `5` = "Never"),
    
    Gender = recode(Gender,
                    `0` = "Male",
                    `1` = "Female"),
    
    MigBackground = recode(MigBackground,
                        `0` = "Native",
                        `1` = "First Generation",
                        `2` = "Second Generation"),
    
    AgeGroups = recode(AgeGroups,
                        '1' = "15-29",
                        '2' = "30-49",
                        '3' = "50-64",
                        '4' = "65+",
                        '5' = "65+"),

   SubjHHincome = recode(SubjHHincome,
                          '1' = "Very difficult on present income",
                          '2' = "Difficult on present income",
                          '3' = "Coping on present income",
                          '4' = "Living comfortably on present income")
    
  )

sapply(all_sample_strata[vars_is_factor], summary)


# Strata
all_sample_strata$strata <- paste(
  all_sample_strata$Gender,
  all_sample_strata$MigBackground,
  all_sample_strata$AgeGroups,
  all_sample_strata$SubjHHincome,
  all_sample_strata$CHFinancSit)

table(all_sample_strata$strata)


strata_frequencies <- 
  all_sample_strata %>% 
  group_by(strata) %>% 
  summarise(freq = n()) %>% 
  ungroup %>% 
  dplyr::select(-strata) %>% 
  pull()
favstats(strata_frequencies)


# ------------------------------------------------------------------------------
# Table: Descriptive for Sample Size of Strata
# Strata Description
strata_summary <- all_sample_strata %>%
  group_by(strata) %>%
  summarise(
    n = n(),
    mean_loneliness = mean(loneliness, na.rm = TRUE),
    sd_loneliness   = sd(loneliness, na.rm = TRUE),
    .groups = "drop"
  ) %>%
  arrange(desc(n))


strata_summary %>%
  gt() %>%
  fmt_number(
    columns = c(mean_loneliness, sd_loneliness),
    decimals = 2
  ) %>%
  cols_label(
    strata = "Variable (SubjHHincome | CHFinancSit | Gender | MigBackground | Age groups)",
    n = "N",
    mean_loneliness = "Mean of Loneliness",
    sd_loneliness = "SD of Loneliness"
  ) %>%
  tab_header(
    title = "Descriptive Analysis of Loneliness across Strata"
  )

# N of Strata (Sample Size >= 20)
prop_20_n <- strata_summary %>%
  summarise(
    total = n(),
    N_is_large_than_20 = sum(n >= 20),
    percent_20_ = N_is_large_than_20 / total * 100
  )
prop_20_n


## Q1-Q5 percentile 
descriptive_table <- strata_summary %>%
  summarise(
    `Minimum` = min(n),
    `10th Percentile` = quantile(n, 0.10),
    `20th Percentile` = quantile(n, 0.20),
    `25th Percentile` = quantile(n, 0.25),
    `30th Percentile` = quantile(n, 0.30),
    `40th Percentile` = quantile(n, 0.40),
    `Median` = median(n),
    `60th Percentile` = quantile(n, 0.60),
    `70th Percentile` = quantile(n, 0.70),
    `75th Percentile` = quantile(n, 0.75),
    `80th Percentile` = quantile(n, 0.80),
    `90th Percentile` = quantile(n, 0.90),
    `Maximum` = max(n),
    `Mean` = mean(n),
    `Standard Deviation` = sd(n),
    `Total Strata` = n(),
    `Total Observations` = sum(n)
  ) %>%
  gt() %>%
  tab_header(
    title = "Descriptive Statistics of Strata Sample Sizes",
    subtitle = "For Intersectional MAIHDA Analysis"
  ) %>%
  fmt_number(
    columns = c(`Minimum`, `10th Percentile`, `20th Percentile`, `25th Percentile`,
                `30th Percentile`, `40th Percentile`, `Median`, `60th Percentile`,
                `70th Percentile`, `75th Percentile`, `80th Percentile`, 
                `90th Percentile`, `Maximum`, `Mean`, `Standard Deviation`),
    decimals = 2
  ) %>%
  fmt_number(
    columns = c(`Total Strata`, `Total Observations`),
    decimals = 0
  ) %>%
  cols_align(
    align = "center",
    columns = everything()
  ) %>%
  tab_style(
    style = cell_text(weight = "bold"),
    locations = cells_column_labels()
  ) %>%
  tab_style(
    style = cell_fill(color = "#f7f7f7"),
    locations = cells_body()
  ) %>%
  tab_source_note(
    source_note = "Note: Sample sizes represent the number of observations within each intersectional stratum."
  )

descriptive_table

# ------------------------------------------------------------------------------
# Plot for Strata Sample Size
freq_table <- strata_summary %>%
  mutate(n_category = case_when(
    n == 1 ~ "1",
    n >= 2 & n <= 5 ~ "2-5",
    n >= 6 & n <= 10 ~ "6-10",
    n >= 11 & n <= 20 ~ "11-20",
    n >= 21 & n <= 50 ~ "21-50",
    n >= 51 & n <= 100 ~ "51-100",
    n >= 101 & n <= 200 ~ "101-200",
    n >= 201 & n <= 300 ~ "201-300",
    n >= 301 & n <= 400 ~ "301-400",
    n >= 401 & n <= 500 ~ "401-500",
    n > 500 ~ "500+"  
  )) %>%
  # as factor
  mutate(n_category = factor(n_category, 
                             levels = c("1", "2-5", "6-10", "11-20", 
                                        "21-50", "51-100", "101-200", 
                                        "201-300", "301-400", "401-500",
                                        "500+"),
                             ordered = TRUE)) %>%
  count(n_category) %>%
  mutate(percentage = n / sum(n) * 100,
         cumulative_percent = cumsum(percentage))

print(freq_table)


light_to_dark_grays <- c(
  "1" = "#F7F7F7",
  "2-5" = "#EDEDED",
  "6-10" = "#D9D9D9",
  "11-20" = "#BDBDBD", 
  "21-50" = "#969696",
  "51-100" = "#737373",
  "101-200" = "#525252",
  "201-300" = "#252525",
  "301-400" = "#0D0D0D",
  "401-500" = "#0D0D0D",
  "500+" = "#0D0D0D"
)


ggplot(freq_table, aes(x = n_category, y = n)) +
  geom_col(aes(fill = n_category), color = "black", show.legend = FALSE) +
  geom_text(aes(label = paste0(n, "\n(", round(percentage, 1), "%)")), 
            vjust = -0.3, size = 3, lineheight = 0.8) +
  scale_fill_manual(values = light_to_dark_grays) +
  labs(
    title = "Distribution of Strata Sample Size Ranges",
    subtitle = "For Intersectional MAIHDA Analysis",
    x = "Sample Size Range",
    y = "Frequency"
  ) +
  theme_minimal() +
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1),
    plot.title = element_text(face = "bold"),
    panel.grid.major.x = element_blank()
  ) +
  scale_y_continuous(expand = expansion(mult = c(0, 0.15)))
# ------------------------------------------------------------------------------




# ------------------------------------------------------------------------------
# Table: Sample characteristics description
table(all_sample_strata$loneliness)
table_factor_summary <- vars_is_factor %>%
  lapply(function(var) {
    all_sample_strata %>%
      count(!!sym(var)) %>%
      mutate(
        variable = var,
        percent = n / sum(n) * 100
      ) %>%
      rename(level = !!sym(var))
  }) %>%
  bind_rows() %>%
  dplyr::select(variable, level, n, percent)

table_factor_summary %>%
  gt(groupname_col = "variable") %>%
  fmt_number(columns = percent, decimals = 1) %>%
  cols_label(
    level = "Variable",
    n = "freq",
    percent = "%"
  ) %>%
  tab_header(
    title = "Table 1"
  )



# cross-table & chi-square
make_gt_crosstab <- function(var, data, outcome = "loneliness") {
  
  tab <- data %>%
    tabyl(!!sym(var), !!sym(outcome)) %>%
    adorn_totals("row") %>%
    adorn_percentages("row") %>%
    adorn_pct_formatting(digits = 1) %>%
    adorn_ns() %>%
    as.data.frame()
  
  chisq <- suppressWarnings(chisq.test(table(data[[var]], data[[outcome]])))
  
  gt_tab <- tab %>%
    gt(rowname_col = var) %>%
    tab_header(
      title = paste0("Cross-tabulation of ", var, " by ", outcome)
    ) %>%
    tab_source_note(
      source_note = paste0(
        "Chi-square test: X²(",
        chisq$parameter,
        ") = ",
        round(chisq$statistic, 2),
        ", p = ",
        signif(chisq$p.value, 3)
      )
    )
  
  return(gt_tab)
}

gt_tables <- map(vars_is_factor, make_gt_crosstab, data = all_sample_strata)
gt_tables
# ------------------------------------------------------------------------------



# ------------------------------------------------------------------------------
# Intersectional MAIHDA
# 1. Null model
model1_null_logit <- glmer(loneliness ~ 1 + (1 | strata),
                                      data = all_sample_strata,
                                      family = binomial(link = "logit"),
                                      weights = anweight)
summary(model1_null_logit)

vpc_null_logit <- 0.8737 / (0.8737 + 3.29) * 100
vpc_null_logit


# 2. Add Strata fixed effcts
model1_fixed_logit <- glmer(loneliness ~ 1 + Gender + MigBackground + AgeGroups +
                                        SubjHHincome + CHFinancSit + 
                                        (1 | strata),
                                      data = all_sample_strata,
                                      family = binomial(link = "logit"),
                                      weights = anweight,
                                      control = glmerControl(optimizer = "bobyqa", 
                                                             optCtrl = list(maxfun = 2e5)))

summary(model1_fixed_logit)

vpc_fixed_logit <- 0.2788  / (0.2788 + 3.29) * 100
vpc_fixed_logit

pcv_logit <- (0.8737 - 0.2788) / 0.8737 * 100
pcv_logit


# Tables
tab_model(model1_null_logit, model1_fixed_logit, p.style="stars", digits = 2)



# ------------------------------------------------------------------
# Plot
# 1. Prediction (logit scale, Probability)
# with random effects
all_sample_strata$linpred <- predict(model1_fixed_logit,
                                     newdata = all_sample_strata,
                                     re.form = ~(1|strata),
                                     type = "link")   # logit(p)

# Probability
all_sample_strata$prob <- plogis(all_sample_strata$linpred)

# 2.  Var Strata --> SE
re_strata <- ranef(model1_fixed_logit, condVar = TRUE)$strata
postVar <- attr(re_strata, "postVar")

if(length(dim(postVar)) == 3){
  se_u <- sqrt(postVar[1,1,])
  names(se_u) <- rownames(re_strata)
} else stop("error")

all_sample_strata$se_linpred <- se_u[all_sample_strata$strata]

# 3. aggregate (subjhinc × fnsdfml × gender × generation × age_groups)
strata_pred <- all_sample_strata %>%
  group_by(SubjHHincome, CHFinancSit, Gender, MigBackground, AgeGroups) %>%
  summarise(
    linpred = mean(linpred, na.rm = TRUE),   # 平均 logit
    se_linpred = mean(se_linpred, na.rm = TRUE), # 简化近似
    .groups = "drop"
  ) %>%
  mutate(
    predicted = plogis(linpred),
    lower = plogis(linpred - 1.96 * se_linpred),
    upper = plogis(linpred + 1.96 * se_linpred)
  )


# 4. Plot
ggplot(strata_pred, aes(x = MigBackground, y = predicted, color = Gender)) +
  geom_point(size = 1.25, 
             position = position_dodge(width = 1)) +
  geom_errorbar(aes(ymin = lower, ymax = upper), 
                width = 0.35, 
                position = position_dodge(width = 1)) +
  facet_nested(~ Gender + AgeGroups + CHFinancSit + SubjHHincome, 
               scales = "free_x", space = "free_x") +
  scale_x_discrete(expand = expansion(mult = c(0.2, 0.2))) +
  scale_y_continuous(limits = c(0, 1), labels = scales::percent_format(accuracy = 1)) +
  scale_color_manual(values = c("Female" = "Orange", "Male" = "Black")) +
  labs(x = NULL, y = "Predicted Probability of Loneliness", 
       color = "Gender", shape = "Gender") +
  theme_minimal() +
  theme(
    axis.text.x = element_text(
      angle = 90, hjust = 1, size = 10, face = "plain"
    ),
    panel.border = element_rect(color = "black", fill = NA, linewidth = 0.75),
    panel.spacing = unit(0.3, "lines"),
    strip.background = element_rect(fill = NA, color = "black", linewidth = 0.75),
    strip.text = element_text(size = 10, face = "plain")
  )



# 5. Published version
library(ggforce)   # 如果需要 facet_nested
library(patchwork) # 用于合并多张图

age_levels <- unique(strata_pred$AgeGroups)

# 创建一个列表存储每个 age_group 的图
plot_list <- lapply(seq_along(age_levels), function(i) {
  age <- age_levels[i]
  df <- subset(strata_pred, AgeGroups == age)
  
  p <- ggplot(df, aes(x = MigBackground , y = predicted, color = Gender, shape = MigBackground)) +
    geom_point(size = 4, position = position_dodge(width = 1)) +  # 进一步增大点的大小
    geom_errorbar(aes(ymin = lower, ymax = upper),
                  width = 0.35, position = position_dodge(width = 1),
                  linewidth = 1) +  # 进一步增加误差条线宽
    facet_nested(~ Gender + CHFinancSit + SubjHHincome , scales = "free_x", space = "free_x") +
    scale_x_discrete(expand = expansion(mult = c(0.2, 0.2))) +
    scale_color_manual(values = c("Male" = "Black", 
                                  "Female" = "Orange")) +
    scale_shape_manual(values = c(15, 16, 17)) +  # 明确设置形状值
    labs(x = NULL, y = paste("Predicted Loneliness\n (Age:", age, ")"), 
         color = "Gender", shape = "MigBackground") +
    theme_minimal() +
    theme(
      axis.text.x = element_text(angle = 75, hjust = 1, size = 28, face = "plain"),  # 进一步增大x轴字体
      axis.text.y = element_text(size = 28),  # 进一步增大y轴字体
      axis.title.y = element_text(size = 28, face = "bold", margin = margin(r = 15)),  # 进一步增大y轴标题
      panel.border = element_rect(color = "black", fill = NA, linewidth = 1),  # 增大边框线宽
      panel.spacing = unit(0.7, "lines"),  # 增加面板间距
      strip.background = element_rect(fill = "grey90", color = "black", linewidth = 1),  # 增大分面背景边框
      strip.text = element_text(size = 24, face = "plain"),  # 进一步增大分面标签字体
      panel.background = element_rect(fill = "grey95", color = NA),
      plot.background = element_rect(fill = "white", color = NA),
      panel.grid.major = element_line(color = "grey85", linewidth = 0.55),  # 增大网格线宽
      panel.grid.minor = element_line(color = "grey88", linewidth = 0.35),  # 增大次要网格线宽
      # 图例设置 - 只在最后一张图显示
      legend.position = if(i == length(age_levels)) "bottom" else "none",
      legend.direction = "horizontal",
      legend.box = "horizontal",
      legend.justification = "center",
      legend.title = element_text(size = 28, face = "bold"),  # 增大图例标题
      legend.text = element_text(size = 28),  # 增大图例文字
      legend.key.size = unit(2.2, "lines"),  # 进一步增大图例键大小
      legend.spacing.x = unit(1.2, "cm"),  # 增加图例水平间距
      legend.key = element_rect(fill = "white"),
      legend.background = element_rect(fill = "white", color = NA),
      # 增大所有文本元素的基准大小
      text = element_text(size = 28)  # 设置全局文本大小
    )
  
  # 如果不是最后一张图，隐藏 x 轴文本和标题
  if (i < length(age_levels)) {
    p <- p + theme(axis.text.x = element_blank(),
                   axis.ticks.x = element_blank())
  }
  
  return(p)
})


# 4张图上下排列
final_plot <- wrap_plots(plot_list, ncol = 1) +
  plot_annotation(
    caption = "Note. SubjHHincome (subjective household income): 1 = Very difficult on present income, 2 = Difficult on present income, 3 = Coping on present income, 4 = Living comfortably on present income."
  ) &
  theme(
    plot.caption = element_text(
      hjust = 0,          # 左对齐
      size = 28,          # 字体大小
      face = "italic",    # 斜体
      margin = margin(t = 15)
    )
  )

final_plot







### As Table
# 加载包
library(dplyr)
library(gt)
library(scales)
library(rstudioapi)

# 假设 strata_pred 已存在，包含 predicted, lower, upper 等列

# 1️⃣ 准备数据框
tbl_to_show <- strata_pred %>%
  select(SubjHHincome, CHFinancSit, Gender, MigBackground, AgeGroups,
         predicted, lower, upper) %>%
  mutate(
    predicted_num = predicted,  # 保留数值版本用于排序
    predicted = percent(predicted, accuracy = 0.1),
    lower = percent(lower, accuracy = 0.1),
    upper = percent(upper, accuracy = 0.1),
    `95% CI` = paste0(lower, " – ", upper)
  ) %>%
  select(-lower, -upper) %>%
  arrange(desc(predicted_num)) %>%
  mutate(
    row_id = row_number(),  # 标记行号
    highlight = case_when(
      row_id <= 15 ~ "high",  # 前15高
      row_id > n() - 15 ~ "low",  # 后15低
      TRUE ~ "none"
    )
  )

# 2️⃣ 构建 gt 表格
gt_tbl <- gt(tbl_to_show) %>%
  tab_header(
    title = md("**Predicted probabilities of loneliness (MAIHDA)**")
  ) %>%
  cols_label(
    SubjHHincome = "Subjective Household income",
    CHFinancSit = "Childhood Financial situation",
    Gender = "Gender",
    MigBackground = "Migration background",
    AgeGroups = "Age group",
    predicted = "Predicted probability",
    `95% CI` = "95% CI"
  ) %>%
  fmt_missing(
    columns = everything(),
    missing_text = "---"
  ) %>%
  # 3️⃣ 对高低10行加粗
  tab_style(
    style = list(cell_text(weight = "bold")),
    locations = cells_body(
      rows = highlight %in% c("high", "low")
    )
  ) %>%
  # 4️⃣ 去掉辅助列
  cols_hide(columns = c(predicted_num, row_id, highlight))



gt_tbl <- gt_tbl %>%
  tab_style(
    style = cell_fill(color = "#e0f7fa"),
    locations = cells_body(rows = highlight == "high")
  ) %>%
  tab_style(
    style = cell_fill(color = "#ffe0e0"),
    locations = cells_body(rows = highlight == "low")
  )



# 5️⃣ 输出到 Viewer
temp_html <- tempfile(fileext = ".html")
gtsave(gt_tbl, temp_html)
rstudioapi::viewer(temp_html)











# ------------------------------------------------------------------------------
# Stratum residual
# 1. RE stratum + Var
re_strata <- ranef(model1_fixed_logit, condVar = TRUE)$strata
postVar   <- attr(re_strata, "postVar")

# RE
strata_eff <- data.frame(
  strata = rownames(re_strata),
  effect = re_strata[,1]
)

# SE
strata_eff$se <- sqrt(postVar[1,1,])

# 95% CI
strata_eff <- strata_eff %>%
  mutate(
    lower = effect - 1.96 * se,
    upper = effect + 1.96 * se,
    significant = ifelse(lower > 0 | upper < 0, TRUE, FALSE) 
  ) %>%
  arrange(effect) %>%
  mutate(rank = row_number())

# N of strata
max_rank <- max(strata_eff$rank)
n_strata <- nrow(strata_eff)

# 2. Stratum-level residual plot，highlight significant strata
ggplot(strata_eff, aes(x = rank, y = effect)) +
  geom_point(aes(size = significant), shape = 16) +         
  geom_errorbar(aes(ymin = lower, ymax = upper, linewidth = significant), width = 0.2) +
  geom_hline(yintercept = 0, linetype = "dashed") +
  scale_size_manual(values = c("FALSE" = 1.5, "TRUE" = 2.5)) +     
  scale_linewidth_manual(values = c("FALSE" = 0.2, "TRUE" = 0.8)) + 
  labs(x = "Stratum Rank", y = "Stratum-level Residual (Intersectional effects, logit)") +
  
  # 设置x轴范围为真实的strata数量
  scale_x_continuous(limits = c(1, max_rank),
                     breaks = seq(1, max_rank, length.out = 5) %>% round()) +  # 自动生成合适的刻度
  theme_minimal() +
  theme(
    panel.border = element_rect(color = "black", fill = NA, linewidth = 0.35),
    axis.text.x  = element_text(size = 20),
    axis.text.y  = element_text(size = 20),
    axis.title.x = element_text(size = 22, face = "bold"),
    axis.title.y = element_text(size = 22, face = "bold"),
    legend.position = "none",
    # 添加与之前图表相同的背景色设置
    panel.background = element_rect(fill = "grey95", color = NA),
    plot.background = element_rect(fill = "white", color = NA),
    panel.grid.major = element_line(color = "grey85", linewidth = 0.25),
    panel.grid.minor = element_line(color = "grey88", linewidth = 0.1)
  )



# ------------------------------------------------------------------------------
# 3. Table, output significant strata
signif_strata <- strata_eff %>%
  filter(lower > 0 | upper < 0) %>%  
  arrange(desc(effect))              

gt_table_sig_intersect <- signif_strata %>%
  dplyr::select(strata, effect, lower, upper) %>%
  gt() %>%
  tab_header(
    title = "Significant Intersectional Strata",
    subtitle = "Intersectional Effect with 95% CI"
  ) %>%
  cols_label(
    strata = "Stratum",
    effect = "Intersectional Effect",
    lower = "Lower 95% CI",
    upper = "Upper 95% CI"
  )%>%
  fmt_number(
    columns = c(effect, lower, upper),
    decimals = 2  
  )

gt_table_sig_intersect










# ------------------------------------------------------------------------------
# Robustness Check

# 1. Add country fixed effects or Random effects

all_sample_strata$Country <- factor(all_sample_strata$Country)

## 3.1 Fixed effects
model1_fixed_logit_cntry <- glmmTMB(loneliness ~ 1 + Gender + MigBackground + AgeGroups +
                                      SubjHHincome + CHFinancSit +
                                Country +
                              (1 | strata),
                            data = all_sample_strata,
                            family = binomial(link = "logit"),
                            weights = anweight)

summary(model1_fixed_logit_cntry)

vpc_fixed_cntry <- 0.2633 / (0.2633 + 3.29) * 100
vpc_fixed_cntry

pcv_fixed_cntry <- (0.8737 - 0.2633) / 0.8737 * 100
pcv_fixed_cntry

tab_model(model1_fixed_logit_cntry, p.style="stars", digits = 2)



# ## 2. Random effects
# model1_mixed_null_logit <- glmmTMB(loneliness ~ 1 + (1 | Country/strata),
#                              data = all_sample_strata,
#                              family = binomial(link = "logit"),
#                              weights = anweight)
# summary(model1_mixed_null_logit)
# vpc_mixed_null_logit <- 0.89671 / (0.89671 + 3.29) * 100
# vpc_mixed_null_logit
# 
# 
# model1_mixed_logit_cntry <- glmmTMB(
#   loneliness ~ 1 + Gender + MigBackground + AgeGroups +
#     SubjHHincome + CHFinancSit +
#     (1 | Country/strata),
#   data = all_sample_strata,
#   family = binomial(link = "logit"),
#   weights = anweight
# )
# summary(model1_mixed_logit_cntry)
# 
# vpc_mixed_fixed_logit <- 0.52338 / (0.52338 + 3.29) *100
# vpc_mixed_fixed_logit
# 
# pcv_mixed_logit <- (0.89671 - 0.52338) / 0.89671 * 100
# pcv_mixed_logit
# 
# ### Attention: ICC based on (Var_level2) / (Var_level2 + 3.29)
# tab_model(model1_mixed_null_logit, model1_mixed_logit_cntry, p.style="stars", digits = 2)


################################################################################
# 3. Exclude N of Strata = 1 (N = 12)
no_1_all_sample_strata <- all_sample_strata %>%
  group_by(strata) %>%
  filter(n() > 1) %>%
  ungroup() 
summary(no_1_all_sample_strata$strata)

strata_frequencies_no_1 <- no_1_all_sample_strata %>%
  count(strata, name = "freq") %>%
  arrange(desc(freq))
summary(strata_frequencies_no_1)



### 3.1. Null model
model1_null_logit_no1 <- glmer(loneliness ~ 1 + (1 | strata),
                             data = no_1_all_sample_strata,
                             family = binomial(link = "logit"),
                             weights = anweight)
summary(model1_null_logit_no1)

vpc_null_logit_no1 <- 0.8754 / (0.8754 + 3.29) * 100
vpc_null_logit_no1


### 3.2. Add Strata fixed effcts
model1_fixed_logit_no1 <- glmer(loneliness ~ 1 + Gender + MigBackground + AgeGroups +
                                SubjHHincome + CHFinancSit + 
                                (1 | strata),
                              data = no_1_all_sample_strata,
                              family = binomial(link = "logit"),
                              weights = anweight,
                              control = glmerControl(optimizer = "bobyqa", 
                                                     optCtrl = list(maxfun = 2e5))
                              )
summary(model1_fixed_logit_no1)

vpc_fixed_logit_no1 <- 0.2768  / (0.2768 + 3.29)
vpc_fixed_logit_no1

pcv_logit_no1 <- (0.8754- 0.2768) / 0.8754 * 100
pcv_logit_no1

tab_model(model1_null_logit_no1, model1_fixed_logit_no1, p.style="stars", digits = 2)


#  Intersectional effects
# Stratum residual
# 1. RE stratum + Var
re_strata_no1 <- ranef(model1_fixed_logit_no1, condVar = TRUE)$strata
postVar_no1   <- attr(re_strata_no1, "postVar")

# RE
strata_eff_no1 <- data.frame(
  strata = rownames(re_strata_no1),
  effect = re_strata_no1[,1]
)

# SE
strata_eff_no1$se <- sqrt(postVar_no1[1,1,])

# 95% CI
strata_eff_no1 <- strata_eff_no1 %>%
  mutate(
    lower = effect - 1.96 * se,
    upper = effect + 1.96 * se,
    significant = ifelse(lower > 0 | upper < 0, TRUE, FALSE)  # 是否显著
  ) %>%
  arrange(effect) %>%
  mutate(rank = row_number())

# N of strata
max_rank <- max(strata_eff_no1$rank)
n_strata <- nrow(strata_eff_no1)

# 2. Stratum-level residual plot，highlight significant strata
ggplot(strata_eff_no1, aes(x = rank, y = effect)) +
  geom_point(aes(size = significant), shape = 16) +         
  geom_errorbar(aes(ymin = lower, ymax = upper, linewidth = significant), width = 0.2) +
  geom_hline(yintercept = 0, linetype = "dashed") +
  scale_size_manual(values = c("FALSE" = 1.5, "TRUE" = 2.5)) +     
  scale_linewidth_manual(values = c("FALSE" = 0.2, "TRUE" = 0.8)) + 
  labs(x = "Stratum Rank", y = "Stratum-level Residual (Intersectional effects, logit)") +
  
  # 设置x轴范围为真实的strata数量
  scale_x_continuous(limits = c(1, max_rank),
                     breaks = seq(1, max_rank, length.out = 5) %>% round()) +  # 自动生成合适的刻度
  theme_minimal() +
  theme(
    panel.border = element_rect(color = "black", fill = NA, linewidth = 0.35),
    axis.text.x  = element_text(size = 20),
    axis.text.y  = element_text(size = 20),
    axis.title.x = element_text(size = 22, face = "bold"),
    axis.title.y = element_text(size = 22, face = "bold"),
    legend.position = "none",
    # 添加与之前图表相同的背景色设置
    panel.background = element_rect(fill = "grey95", color = NA),
    plot.background = element_rect(fill = "white", color = NA),
    panel.grid.major = element_line(color = "grey85", linewidth = 0.25),
    panel.grid.minor = element_line(color = "grey88", linewidth = 0.1)
  )



# ------------------------------------------------------------------------------
# 3. Table, output significant strata
signif_strata_no1 <- strata_eff_no1 %>%
  filter(lower > 0 | upper < 0) %>%  
  arrange(desc(effect))              

gt_table_sig_intersect_no1 <- signif_strata_no1 %>%
  dplyr::select(strata, effect, lower, upper) %>%
  gt() %>%
  tab_header(
    title = "Significant Intersectional Strata",
    subtitle = "Intersectional Effect with 95% CI"
  ) %>%
  cols_label(
    strata = "Stratum",
    effect = "Intersectional Effect",
    lower = "Lower 95% CI",
    upper = "Upper 95% CI"
  )%>%
  fmt_number(
    columns = c(effect, lower, upper),
    decimals = 2  
  )

gt_table_sig_intersect_no1

################################################################################



################################################################################
# 4. Exclude N of Strata <= 5 
no_5_all_sample_strata <- all_sample_strata %>%
  group_by(strata) %>%
  filter(n() > 5) %>%
  ungroup() 
summary(no_5_all_sample_strata$strata)

strata_frequencies_no_5 <- no_5_all_sample_strata %>%
  count(strata, name = "freq") %>%
  arrange(desc(freq))
summary(strata_frequencies_no_5)



### 4.1. Null model
model1_null_logit_no5 <- glmer(loneliness ~ 1 + (1 | strata),
                               data = no_5_all_sample_strata,
                               family = binomial(link = "logit"),
                               weights = anweight)
summary(model1_null_logit_no5)

vpc_null_logit_no5 <- 0.7529 / (0.7529 + 3.29) * 100
vpc_null_logit_no5


### 3.2. Add Strata fixed effcts
model1_fixed_logit_no5 <- glmer(loneliness ~ 1 + Gender + MigBackground + AgeGroups +
                                  SubjHHincome + CHFinancSit + 
                                  (1 | strata),
                                data = no_5_all_sample_strata,
                                family = binomial(link = "logit"),
                                weights = anweight,
                                control = glmerControl(optimizer = "bobyqa", 
                                                       optCtrl = list(maxfun = 2e5))
)
summary(model1_fixed_logit_no5)

vpc_fixed_logit_no5 <- 0.2527  / (0.2527 + 3.29) * 100
vpc_fixed_logit_no5

pcv_logit_no5 <- (0.7529 - 0.2527) / 0.7529 * 100
pcv_logit_no5

tab_model(model1_null_logit_no5, model1_fixed_logit_no5, p.style="stars", digits = 2)




#  Intersectional effects
# Stratum residual
# 1. RE stratum + Var
re_strata_no5 <- ranef(model1_fixed_logit_no5, condVar = TRUE)$strata
postVar_no5  <- attr(re_strata_no5, "postVar")

# RE
strata_eff_no5 <- data.frame(
  strata = rownames(re_strata_no5),
  effect = re_strata_no5[,1]
)

# SE
strata_eff_no5$se <- sqrt(postVar_no5[1,1,])

# 95% CI
strata_eff_no5 <- strata_eff_no5 %>%
  mutate(
    lower = effect - 1.96 * se,
    upper = effect + 1.96 * se,
    significant = ifelse(lower > 0 | upper < 0, TRUE, FALSE)  # 是否显著
  ) %>%
  arrange(effect) %>%
  mutate(rank = row_number())

# N of strata
max_rank <- max(strata_eff_no5$rank)
n_strata <- nrow(strata_eff_no5)

# 2. Stratum-level residual plot，highlight significant strata
ggplot(strata_eff_no5, aes(x = rank, y = effect)) +
  geom_point(aes(size = significant), shape = 16) +         
  geom_errorbar(aes(ymin = lower, ymax = upper, linewidth = significant), width = 0.2) +
  geom_hline(yintercept = 0, linetype = "dashed") +
  scale_size_manual(values = c("FALSE" = 1.5, "TRUE" = 2.5)) +     
  scale_linewidth_manual(values = c("FALSE" = 0.2, "TRUE" = 0.8)) + 
  labs(x = "Stratum Rank", y = "Stratum-level Residual (Intersectional effects, logit)") +
  
  # 设置x轴范围为真实的strata数量
  scale_x_continuous(limits = c(1, max_rank),
                     breaks = seq(1, max_rank, length.out = 5) %>% round()) +  # 自动生成合适的刻度
  theme_minimal() +
  theme(
    panel.border = element_rect(color = "black", fill = NA, linewidth = 0.35),
    axis.text.x  = element_text(size = 20),
    axis.text.y  = element_text(size = 20),
    axis.title.x = element_text(size = 22, face = "bold"),
    axis.title.y = element_text(size = 22, face = "bold"),
    legend.position = "none",
    # 添加与之前图表相同的背景色设置
    panel.background = element_rect(fill = "grey95", color = NA),
    plot.background = element_rect(fill = "white", color = NA),
    panel.grid.major = element_line(color = "grey85", linewidth = 0.25),
    panel.grid.minor = element_line(color = "grey88", linewidth = 0.1)
  )



# ------------------------------------------------------------------------------
# 3. Table, output significant strata
signif_strata_no5 <- strata_eff_no5 %>%
  filter(lower > 0 | upper < 0) %>%  
  arrange(desc(effect))              

gt_table_sig_intersect_no5 <- signif_strata_no5 %>%
  dplyr::select(strata, effect, lower, upper) %>%
  gt() %>%
  tab_header(
    title = "Significant Intersectional Strata",
    subtitle = "Intersectional Effect with 95% CI"
  ) %>%
  cols_label(
    strata = "Stratum",
    effect = "Intersectional Effect",
    lower = "Lower 95% CI",
    upper = "Upper 95% CI"
  )%>%
  fmt_number(
    columns = c(effect, lower, upper),
    decimals = 2  
  )

gt_table_sig_intersect_no5


################################################################################
